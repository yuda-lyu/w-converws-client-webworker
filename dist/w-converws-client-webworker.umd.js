/*!
 * w-converws-client-webworker v1.0.27
 * (c) 2018-2021 yuda-lyu(semisphere)
 * Released under the MIT License.
 */
!function(l,d){"object"==typeof exports&&"undefined"!=typeof module?module.exports=d():"function"==typeof define&&define.amd?define(d):(l="undefined"!=typeof globalThis?globalThis:l||self)["w-converws-client-webworker"]=d()}(this,(function(){"use strict";var l=/\s/;var d=/^\s+/;function Z(Z){return Z?Z.slice(0,function(d){for(var Z=d.length;Z--&&l.test(d.charAt(Z)););return Z}(Z)+1).replace(d,""):Z}function b(l){var d=typeof l;return null!=l&&("object"==d||"function"==d)}var m="object"==typeof global&&global&&global.Object===Object&&global,i="object"==typeof self&&self&&self.Object===Object&&self,c=m||i||Function("return this")(),X=c.Symbol,u=Object.prototype,t=u.hasOwnProperty,n=u.toString,p=X?X.toStringTag:void 0;var G=Object.prototype.toString;var W="[object Null]",y="[object Undefined]",o=X?X.toStringTag:void 0;function e(l){return null==l?void 0===l?y:W:o&&o in Object(l)?function(l){var d=t.call(l,p),Z=l[p];try{l[p]=void 0;var b=!0}catch(l){}var m=n.call(l);return b&&(d?l[p]=Z:delete l[p]),m}(l):function(l){return G.call(l)}(l)}var V="[object Symbol]";function I(l){return"symbol"==typeof l||function(l){return null!=l&&"object"==typeof l}(l)&&e(l)==V}var K=NaN,h=/^[-+]0x[0-9a-f]+$/i,s=/^0b[01]+$/i,Y=/^0o[0-7]+$/i,a=parseInt;function H(l){if("number"==typeof l)return l;if(I(l))return K;if(b(l)){var d="function"==typeof l.valueOf?l.valueOf():l;l=b(d)?d+"":d}if("string"!=typeof l)return 0===l?l:+l;l=Z(l);var m=s.test(l);return m||Y.test(l)?a(l.slice(2),m?2:8):h.test(l)?K:+l}var J=1/0,S=17976931348623157e292;function R(l){return l?(l=H(l))===J||l===-J?(l<0?-1:1)*S:l==l?l:0:0===l?l:0}function r(l){var d=R(l),Z=d%1;return d==d?Z?d-Z:d:0}function C(l){return!(!function(l){return"[object String]"===Object.prototype.toString.call(l)}(l)||""===l)}function x(l){let d=!1;if(C(l))d=!isNaN(Number(l));else if(function(l){return"[object Number]"===Object.prototype.toString.call(l)}(l)){if(function(l){return l!=l}(l))return!1;d=!0}return d}function L(l){if(!x(l))return 0;return R(l)}function v(l){return!!x(l)&&(l=L(l),"number"==typeof(d=l)&&d==r(d));var d}var Q=Array.isArray,g=1/0,N=X?X.prototype:void 0,T=N?N.toString:void 0;function P(l){if("string"==typeof l)return l;if(Q(l))return function(l,d){for(var Z=-1,b=null==l?0:l.length,m=Array(b);++Z<b;)m[Z]=d(l[Z],Z,l);return m}(l,P)+"";if(I(l))return T?T.call(l):"";var d=l+"";return"0"==d&&1/l==-g?"-0":d}function f(l){return null==l?"":P(l)}var j=c.isFinite,B=Math.min;var U,k=(U=Math["round"],function(l,d){if(l=H(l),(d=null==d?0:B(r(d),292))&&j(l)){var Z=(f(l)+"e").split("e");return+((Z=(f(U(Z[0]+"e"+(+Z[1]+d)))+"e").split("e"))[0]+"e"+(+Z[1]-d))}return U(l)});function F(l){if(!x(l))return 0;l=L(l);let d=k(l);return"0"===String(d)?0:d}let w="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),z=w.length;function O(){let l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:32,d=[];var Z;l=v(Z=l)&&F(Z)>0?F(l):32;for(let Z=0;Z<l;Z++)d[Z]=w[0|Math.random()*z];return d.join("")}function M(){let l,d,Z=new Promise((function(){l=arguments[0],d=arguments[1]}));return Z.resolve=l,Z.reject=d,Z}var D="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function E(l){if(l.__esModule)return l;var d=l.default;if("function"==typeof d){var Z=function l(){if(this instanceof l){var Z=[null];return Z.push.apply(Z,arguments),new(Function.bind.apply(d,Z))}return d.apply(this,arguments)};Z.prototype=d.prototype}else Z={};return Object.defineProperty(Z,"__esModule",{value:!0}),Object.keys(l).forEach((function(d){var b=Object.getOwnPropertyDescriptor(l,d);Object.defineProperty(Z,d,b.get?b:{enumerable:!0,get:function(){return l[d]}})})),Z}var A={};!function(l){var d=Object.prototype.hasOwnProperty,Z="~";function b(){}function m(l,d,Z){this.fn=l,this.context=d,this.once=Z||!1}function i(l,d,b,i,c){if("function"!=typeof b)throw new TypeError("The listener must be a function");var X=new m(b,i||l,c),u=Z?Z+d:d;return l._events[u]?l._events[u].fn?l._events[u]=[l._events[u],X]:l._events[u].push(X):(l._events[u]=X,l._eventsCount++),l}function c(l,d){0==--l._eventsCount?l._events=new b:delete l._events[d]}function X(){this._events=new b,this._eventsCount=0}Object.create&&(b.prototype=Object.create(null),(new b).__proto__||(Z=!1)),X.prototype.eventNames=function(){var l,b,m=[];if(0===this._eventsCount)return m;for(b in l=this._events)d.call(l,b)&&m.push(Z?b.slice(1):b);return Object.getOwnPropertySymbols?m.concat(Object.getOwnPropertySymbols(l)):m},X.prototype.listeners=function(l){var d=Z?Z+l:l,b=this._events[d];if(!b)return[];if(b.fn)return[b.fn];for(var m=0,i=b.length,c=new Array(i);m<i;m++)c[m]=b[m].fn;return c},X.prototype.listenerCount=function(l){var d=Z?Z+l:l,b=this._events[d];return b?b.fn?1:b.length:0},X.prototype.emit=function(l,d,b,m,i,c){var X=Z?Z+l:l;if(!this._events[X])return!1;var u,t,n=this._events[X],p=arguments.length;if(n.fn){switch(n.once&&this.removeListener(l,n.fn,void 0,!0),p){case 1:return n.fn.call(n.context),!0;case 2:return n.fn.call(n.context,d),!0;case 3:return n.fn.call(n.context,d,b),!0;case 4:return n.fn.call(n.context,d,b,m),!0;case 5:return n.fn.call(n.context,d,b,m,i),!0;case 6:return n.fn.call(n.context,d,b,m,i,c),!0}for(t=1,u=new Array(p-1);t<p;t++)u[t-1]=arguments[t];n.fn.apply(n.context,u)}else{var G,W=n.length;for(t=0;t<W;t++)switch(n[t].once&&this.removeListener(l,n[t].fn,void 0,!0),p){case 1:n[t].fn.call(n[t].context);break;case 2:n[t].fn.call(n[t].context,d);break;case 3:n[t].fn.call(n[t].context,d,b);break;case 4:n[t].fn.call(n[t].context,d,b,m);break;default:if(!u)for(G=1,u=new Array(p-1);G<p;G++)u[G-1]=arguments[G];n[t].fn.apply(n[t].context,u)}}return!0},X.prototype.on=function(l,d,Z){return i(this,l,d,Z,!1)},X.prototype.once=function(l,d,Z){return i(this,l,d,Z,!0)},X.prototype.removeListener=function(l,d,b,m){var i=Z?Z+l:l;if(!this._events[i])return this;if(!d)return c(this,i),this;var X=this._events[i];if(X.fn)X.fn!==d||m&&!X.once||b&&X.context!==b||c(this,i);else{for(var u=0,t=[],n=X.length;u<n;u++)(X[u].fn!==d||m&&!X[u].once||b&&X[u].context!==b)&&t.push(X[u]);t.length?this._events[i]=1===t.length?t[0]:t:c(this,i)}return this},X.prototype.removeAllListeners=function(l){var d;return l?(d=Z?Z+l:l,this._events[d]&&c(this,d)):(this._events=new b,this._eventsCount=0),this},X.prototype.off=X.prototype.removeListener,X.prototype.addListener=X.prototype.on,X.prefixed=Z,X.EventEmitter=X,l.exports=X}({get exports(){return A},set exports(l){A=l}});var q=A;function _(){return new q}function $(l){let d=Object.prototype.toString.call(l);return"[object Function]"===d||"[object AsyncFunction]"===d}var ll={},dl={get exports(){return ll},set exports(l){ll=l}};var Zl,bl={},ml={get exports(){return bl},set exports(l){bl=l}},il=E(Object.freeze({__proto__:null,default:{}}));function cl(){return Zl||(Zl=1,function(l,d){var Z;l.exports=(Z=Z||function(l,d){var Z;if("undefined"!=typeof window&&window.crypto&&(Z=window.crypto),"undefined"!=typeof self&&self.crypto&&(Z=self.crypto),"undefined"!=typeof globalThis&&globalThis.crypto&&(Z=globalThis.crypto),!Z&&"undefined"!=typeof window&&window.msCrypto&&(Z=window.msCrypto),!Z&&void 0!==D&&D.crypto&&(Z=D.crypto),!Z)try{Z=il}catch(l){}var b=function(){if(Z){if("function"==typeof Z.getRandomValues)try{return Z.getRandomValues(new Uint32Array(1))[0]}catch(l){}if("function"==typeof Z.randomBytes)try{return Z.randomBytes(4).readInt32LE()}catch(l){}}throw new Error("Native crypto module could not be used to get secure random number.")},m=Object.create||function(){function l(){}return function(d){var Z;return l.prototype=d,Z=new l,l.prototype=null,Z}}(),i={},c=i.lib={},X=c.Base={extend:function(l){var d=m(this);return l&&d.mixIn(l),d.hasOwnProperty("init")&&this.init!==d.init||(d.init=function(){d.$super.init.apply(this,arguments)}),d.init.prototype=d,d.$super=this,d},create:function(){var l=this.extend();return l.init.apply(l,arguments),l},init:function(){},mixIn:function(l){for(var d in l)l.hasOwnProperty(d)&&(this[d]=l[d]);l.hasOwnProperty("toString")&&(this.toString=l.toString)},clone:function(){return this.init.prototype.extend(this)}},u=c.WordArray=X.extend({init:function(l,Z){l=this.words=l||[],this.sigBytes=Z!=d?Z:4*l.length},toString:function(l){return(l||n).stringify(this)},concat:function(l){var d=this.words,Z=l.words,b=this.sigBytes,m=l.sigBytes;if(this.clamp(),b%4)for(var i=0;i<m;i++){var c=Z[i>>>2]>>>24-i%4*8&255;d[b+i>>>2]|=c<<24-(b+i)%4*8}else for(var X=0;X<m;X+=4)d[b+X>>>2]=Z[X>>>2];return this.sigBytes+=m,this},clamp:function(){var d=this.words,Z=this.sigBytes;d[Z>>>2]&=4294967295<<32-Z%4*8,d.length=l.ceil(Z/4)},clone:function(){var l=X.clone.call(this);return l.words=this.words.slice(0),l},random:function(l){for(var d=[],Z=0;Z<l;Z+=4)d.push(b());return new u.init(d,l)}}),t=i.enc={},n=t.Hex={stringify:function(l){for(var d=l.words,Z=l.sigBytes,b=[],m=0;m<Z;m++){var i=d[m>>>2]>>>24-m%4*8&255;b.push((i>>>4).toString(16)),b.push((15&i).toString(16))}return b.join("")},parse:function(l){for(var d=l.length,Z=[],b=0;b<d;b+=2)Z[b>>>3]|=parseInt(l.substr(b,2),16)<<24-b%8*4;return new u.init(Z,d/2)}},p=t.Latin1={stringify:function(l){for(var d=l.words,Z=l.sigBytes,b=[],m=0;m<Z;m++){var i=d[m>>>2]>>>24-m%4*8&255;b.push(String.fromCharCode(i))}return b.join("")},parse:function(l){for(var d=l.length,Z=[],b=0;b<d;b++)Z[b>>>2]|=(255&l.charCodeAt(b))<<24-b%4*8;return new u.init(Z,d)}},G=t.Utf8={stringify:function(l){try{return decodeURIComponent(escape(p.stringify(l)))}catch(l){throw new Error("Malformed UTF-8 data")}},parse:function(l){return p.parse(unescape(encodeURIComponent(l)))}},W=c.BufferedBlockAlgorithm=X.extend({reset:function(){this._data=new u.init,this._nDataBytes=0},_append:function(l){"string"==typeof l&&(l=G.parse(l)),this._data.concat(l),this._nDataBytes+=l.sigBytes},_process:function(d){var Z,b=this._data,m=b.words,i=b.sigBytes,c=this.blockSize,X=i/(4*c),t=(X=d?l.ceil(X):l.max((0|X)-this._minBufferSize,0))*c,n=l.min(4*t,i);if(t){for(var p=0;p<t;p+=c)this._doProcessBlock(m,p);Z=m.splice(0,t),b.sigBytes-=n}return new u.init(Z,n)},clone:function(){var l=X.clone.call(this);return l._data=this._data.clone(),l},_minBufferSize:0});c.Hasher=W.extend({cfg:X.extend(),init:function(l){this.cfg=this.cfg.extend(l),this.reset()},reset:function(){W.reset.call(this),this._doReset()},update:function(l){return this._append(l),this._process(),this},finalize:function(l){return l&&this._append(l),this._doFinalize()},blockSize:16,_createHelper:function(l){return function(d,Z){return new l.init(Z).finalize(d)}},_createHmacHelper:function(l){return function(d,Z){return new y.HMAC.init(l,Z).finalize(d)}}});var y=i.algo={};return i}(Math),Z)}(ml)),bl}!function(l,d){l.exports=cl().enc.Utf8}(dl);var Xl=ll,ul={};!function(l,d){var Z;l.exports=(Z=cl(),function(){var l=Z,d=l.lib.WordArray;function b(l,Z,b){for(var m=[],i=0,c=0;c<Z;c++)if(c%4){var X=b[l.charCodeAt(c-1)]<<c%4*2|b[l.charCodeAt(c)]>>>6-c%4*2;m[i>>>2]|=X<<24-i%4*8,i++}return d.create(m,i)}l.enc.Base64={stringify:function(l){var d=l.words,Z=l.sigBytes,b=this._map;l.clamp();for(var m=[],i=0;i<Z;i+=3)for(var c=(d[i>>>2]>>>24-i%4*8&255)<<16|(d[i+1>>>2]>>>24-(i+1)%4*8&255)<<8|d[i+2>>>2]>>>24-(i+2)%4*8&255,X=0;X<4&&i+.75*X<Z;X++)m.push(b.charAt(c>>>6*(3-X)&63));var u=b.charAt(64);if(u)for(;m.length%4;)m.push(u);return m.join("")},parse:function(l){var d=l.length,Z=this._map,m=this._reverseMap;if(!m){m=this._reverseMap=[];for(var i=0;i<Z.length;i++)m[Z.charCodeAt(i)]=i}var c=Z.charAt(64);if(c){var X=l.indexOf(c);-1!==X&&(d=X)}return b(l,d,m)},_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="}}(),Z.enc.Base64)}({get exports(){return ul},set exports(l){ul=l}});var tl=ul;let nl=C(pl="")?tl.parse(pl).toString(Xl):"";var pl;return function(l){let d=new _,Z=function(l){let d,Z=window.URL||window.webkitURL;try{return d=new(window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder),d.append(l),d=d.getBlob(),new Worker(Z.createObjectURL(d))}catch(l){}try{return d=new Blob([l]),new Worker(Z.createObjectURL(d))}catch(l){}try{return new Worker("data:application/javascript,"+encodeURIComponent(l))}catch(l){}return null}(nl);if(null===Z)return null;function b(l,b,m){let i=M(),c=O(),X={_id:c,type:l,input:b};return Z.postMessage(X),d.on(c,(function(l){$(m)&&m(l.prog),100===l.prog&&(i.resolve(),d.removeAllListeners(c))})),i}return function(l){let d={_id:O(),type:"init",input:l};Z.postMessage(d)}(l),Z.onmessage=function(l){let Z=l.data,b=Z._id;"system"!==b?d.emit(b,Z):d.emit(Z.func,Z.data)},d.execute=function(l,b,m){let i=M(),c=O(),X={_id:c,type:"execute",func:l,input:b};return Z.postMessage(X),d.on(c,(function(l){l.prog?$(m)&&m(l.prog):(i.resolve(l.output),d.removeAllListeners(c))})),i},d.broadcast=function(l,d){return b("broadcast",l,d)},d.deliver=function(l,d){return b("deliver",l,d)},d.terminate=function(){Z.terminate(),Z=void 0},d}}));
//# sourceMappingURL=w-converws-client-webworker.umd.js.map
